{"version":3,"sources":["Views/Navbar.js","Components/ShowsSlider.js","Utils/constants.js","Components/MainShow.js","Views/Home.js","Redux/actions/movies.js","API/moviesApi.js","Redux/actions/tvs.js","API/tvApi.js","Redux/actions/people.js","API/peopleApi.js","API/index.js","App.js","Redux/actions/index.js","Redux/reducers/movies.js","Redux/reducers/tvs.js","Redux/reducers/people.js","Redux/reducers/index.js","middleware/index.js","index.js"],"names":["navbar","className","src","alt","Component","ShowsSlider","state","video","componentDidMount","this","props","title","modules","Navigation","Pagination","spaceBetween","slidesPerView","width","freeMode","navigation","loop","Object","values","shows","map","show","poster_path","profile_path","id","withResizeDetector","API_KEY","MainShow","componentDidUpdate","prevProps","Autoplay","autoplay","delay","backdrop_path","original_title","overview","Home","movies","nowPlaying","popularMovies","tvs","tvLatest","topRated","people","popular","connect","INIT_MOVIES","getInitMovies","dispatch","getState","NowPlaying","Promise","res","rej","axios","method","url","data","headers","then","responseText","catch","error","console","PopularMovies","TopRated","UpcomingMovies","all","results","upcomingMovies","type","INIT_TVS","getInitTvs","TvLatest","PopularTv","INIT_PEOPLE","getInitPeople","interceptors","request","use","a","config","baseURL","reject","App","useEffect","store","Navbar","initialState","action","rootReducer","combineReducers","applyMiddleware","thunk","enhancer","composeEnhancers","compose","middleware","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8038db64.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"flex  h-[70px] md:px-4 items-center\">\r\n                <img className=\"mx-4 h-3/4\" src=\"/netflix2.png\" alt=\"Logo\"></img>\r\n                <div className=\"navBtn\">Home</div>\r\n                <div className=\"navBtn\">TV Shows</div>\r\n                <div className=\"navBtn\">Movies</div>\r\n                <div className=\"navBtn\">Celebrities</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default navbar\r\n","import React, { Component } from 'react'\r\n// Import Swiper React components\r\n// Core modules imports are same as usual\r\nimport { Navigation, Pagination } from 'swiper';\r\n// Direct React component imports\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react.js';\r\nimport { withResizeDetector } from 'react-resize-detector';\r\n// Styles must use direct files imports\r\nimport 'swiper/swiper.scss'; // core Swiper\r\nimport 'swiper/modules/navigation/navigation.scss'; // Navigation module\r\nimport 'swiper/modules/pagination/pagination.scss'; // Pagination module\r\nexport class ShowsSlider extends Component {\r\n    state = {\r\n        video: null\r\n    }\r\n    componentDidMount = () => {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"flex flex-col my-[40px]\">\r\n                <h3 className=\"text-white font-extrabold text-3xl mb-[20px]\">{this.props.title}</h3>\r\n                <div className=\"flex flex-row w-full items-center justify-between flex-wrap\">\r\n\r\n                    <Swiper\r\n                        modules={[Navigation, Pagination]}\r\n                        spaceBetween={10}\r\n                        slidesPerView={this.props.width > 768 ? 10 : 3}\r\n                        freeMode\r\n                        navigation\r\n                        loop\r\n                    >\r\n                        {\r\n                            Object.values(this.props?.shows)?.map(show => {\r\n\r\n                                return <SwiperSlide key={show.id}><img\r\n                                    className=\"m-auto w-[60vw] md:w-[9vw] rounded-2xl\r\n                                                 cursor-pointer transition-all \"\r\n                                    src={`https://image.tmdb.org/t/p/w500/${show.poster_path ?? show.profile_path}`} alt=\"Show poster\" /></SwiperSlide>\r\n\r\n\r\n                            })\r\n                        }\r\n                    </Swiper>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withResizeDetector(ShowsSlider)\r\n","export const API_KEY = 'd25e5dcba8070482c8235e3165d9eb1d'","import React, { Component } from 'react'\r\nimport { _getVideos } from '../API/moviesApi'\r\n// Import Swiper React components\r\n// Core modules imports are same as usual\r\nimport { Navigation, Pagination, Autoplay } from 'swiper';\r\n// Direct React component imports\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react.js';\r\n\r\n// Styles must use direct files imports\r\nimport 'swiper/swiper.scss'; // core Swiper\r\nimport 'swiper/modules/navigation/navigation.scss'; // Navigation module\r\nimport 'swiper/modules/pagination/pagination.scss'; // Pagination module\r\nexport class MainShow extends Component {\r\n    state = {\r\n        video: null\r\n    }\r\n    componentDidUpdate = (prevProps) => {\r\n        // if (JSON.stringify(prevProps.show) !== JSON.stringify(this.props.show)) {\r\n        //     this.getVideo();\r\n        // }\r\n    }\r\n    // getVideo = () => {\r\n    //     _getVideos(this.props.show.id)\r\n    //         .then(res => {\r\n    //             let video = res.data.results.find(vid => vid.site === \"YouTube\")\r\n    //             if (video) {\r\n    //                 this.setState({ video })\r\n    //             }\r\n    //         })\r\n    // }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"md:h-[60vh] w-full relative overflow-hidden rounded\"\r\n            >\r\n\r\n                {/* {\r\n                    this.state.video ?\r\n                        <iframe className=\"w-full h-full\"\r\n                            title=\"Main Trailer\"\r\n                            src={`https://www.youtube.com/embed/${this.state.video?.key}?loop=1&autoplay=1&mute=1&controls=0`}>\r\n                        </iframe> :\r\n                        <>\r\n                            <img\r\n                                className=\"\"\r\n                                src={`https://image.tmdb.org/t/p/original/${show?.backdrop_path}`} alt=\"\" />\r\n                            <div className=\"absolute left-[4%] top-[20%] \">\r\n                                <h1 className=\"text-3xl text-white font-extrabold\">{show?.original_title}</h1>\r\n                                <p className=\"text-white w-[50%]\">{show?.overview}</p>\r\n                            </div>\r\n                        </>\r\n                } */}\r\n                <Swiper\r\n                    modules={[Navigation, Pagination, Autoplay]}\r\n                    // spaceBetween={10}\r\n                    slidesPerView={1}\r\n                    freeMode\r\n                    autoplay={{ delay: 5000 }}\r\n\r\n                >\r\n                    {\r\n                        this.props?.shows?.map(show => {\r\n\r\n                            return <SwiperSlide key={show.id}>        <>\r\n                                <img\r\n                                    className=\"w-auto\"\r\n                                    src={`https://image.tmdb.org/t/p/original/${show?.backdrop_path}`} alt=\"\" />\r\n                                <div className=\"absolute left-[1%] md:left-[4%] top-[65%] md:top-[20%] \">\r\n                                    <h1 className=\"text-lg md:text-3xl text-white font-extrabold\">{show?.original_title}</h1>\r\n                                    <p className=\"hidden md:flex text-sm text-white w-[50%]\">{show?.overview}</p>\r\n                                </div>\r\n                            </></SwiperSlide>\r\n\r\n\r\n                        })\r\n                    }\r\n                </Swiper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainShow\r\n","import React, { Component } from 'react'\r\nimport ShowsSlider from '../Components/ShowsSlider'\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport MainShow from '../Components/MainShow'\r\nexport class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainShow shows={Object.values(this.props.movies.nowPlaying)} />\r\n                <ShowsSlider title=\"Trending Movies\" shows={this.props.movies.nowPlaying} />\r\n                <ShowsSlider title=\"Popular Movies\" shows={this.props.movies.popularMovies} />\r\n                <ShowsSlider title=\"Trending Tv\" shows={this.props.tvs.tvLatest} />\r\n                <ShowsSlider title=\"Toprated Tv\" shows={this.props.tvs.topRated} />\r\n                <ShowsSlider title=\"Celebrities\" shows={this.props.people.popular} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({ movies, tvs, people }) => {\r\n    return {\r\n        movies,\r\n        tvs,\r\n        people\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)\r\n","import { _getNowPlaying, _getPopular, _getToprated, _getUpcoming } from '../../API/moviesApi'\r\nexport const INIT_MOVIES = 'INIT_MOVIES'\r\nconst setMovies = (data) => {\r\n    return {\r\n        type: INIT_MOVIES,\r\n        data\r\n    }\r\n}\r\nexport const getInitMovies = () => {\r\n    return (dispatch, getState) => {\r\n        const NowPlaying = _getNowPlaying();\r\n        const PopularMovies = _getPopular();\r\n        const TopRated = _getToprated();\r\n        const UpcomingMovies = _getUpcoming();\r\n        Promise.all([NowPlaying, PopularMovies, TopRated, UpcomingMovies]).then((values) => {\r\n            dispatch(setMovies({\r\n                nowPlaying: values[0].data.results,\r\n                popularMovies: values[1].data.results,\r\n                topRated: values[2].data.results,\r\n                upcomingMovies: values[3].data.results\r\n            }))\r\n        });\r\n\r\n    }\r\n}","import axios from 'axios'\r\nimport { API_KEY } from '../Utils/constants'\r\n\r\nexport function _getUpcoming() {\r\n    return new Promise((res, rej) => {\r\n        axios({\r\n            method: \"get\",\r\n            url: `movie/upcoming?api_key=${API_KEY}`,\r\n            data: {},\r\n            headers: {\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((responseText) => {\r\n                res(responseText);\r\n            })\r\n            .catch((error) => {\r\n                console.error(`_getUpcoming : ${error}`);\r\n                rej(error);\r\n            });\r\n    });\r\n}\r\n\r\nexport function _getToprated() {\r\n    return new Promise((res, rej) => {\r\n        axios({\r\n            method: \"get\",\r\n            url: `movie/top_rated?api_key=${API_KEY}`,\r\n            data: {},\r\n            headers: {\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((responseText) => {\r\n                res(responseText);\r\n            })\r\n            .catch((error) => {\r\n                console.error(`_getToprated : ${error}`);\r\n                rej(error);\r\n            });\r\n    });\r\n}\r\n\r\nexport function _getPopular() {\r\n    return new Promise((res, rej) => {\r\n        axios({\r\n            method: \"get\",\r\n            url: `movie/popular?api_key=${API_KEY}`,\r\n            data: {},\r\n            headers: {\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((responseText) => {\r\n                res(responseText);\r\n            })\r\n            .catch((error) => {\r\n                console.error(`_getPopular : ${error}`);\r\n                rej(error);\r\n            });\r\n    });\r\n}\r\n\r\n\r\nexport function _getNowPlaying() {\r\n    return new Promise((res, rej) => {\r\n        axios({\r\n            method: \"get\",\r\n            url: `movie/now_playing?api_key=${API_KEY}`,\r\n            data: {},\r\n            headers: {\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((responseText) => {\r\n                res(responseText);\r\n            })\r\n            .catch((error) => {\r\n                console.error(`_getNowPlaying : ${error}`);\r\n                rej(error);\r\n            });\r\n    });\r\n}\r\n\r\nexport function _getVideos(id) {\r\n    return new Promise((res, rej) => {\r\n        axios({\r\n            method: \"get\",\r\n            url: `movie/${id}/videos?api_key=${API_KEY}`,\r\n            data: {},\r\n            headers: {\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((responseText) => {\r\n                res(responseText);\r\n            })\r\n            .catch((error) => {\r\n                console.error(`_getVideos : ${error}`);\r\n                rej(error);\r\n            });\r\n    });\r\n}\r\n","import { _getTvLatest, _getTvToprated } from '../../API/tvApi'\r\nexport const INIT_TVS = 'INIT_TVS'\r\nconst setTvs = (data) => {\r\n    return {\r\n        type: INIT_TVS,\r\n        data\r\n    }\r\n}\r\nexport const getInitTvs = () => {\r\n    return (dispatch, getState) => {\r\n        const TvLatest = _getTvLatest();\r\n        const PopularTv = _getTvToprated();\r\n\r\n        Promise.all([TvLatest, PopularTv]).then((values) => {\r\n            dispatch(setTvs({\r\n                tvLatest: values[0].data.results,\r\n                topRated: values[1].data.results\r\n\r\n            }))\r\n        });\r\n\r\n    }\r\n}","import axios from 'axios'\r\nimport { API_KEY } from '../Utils/constants';\r\n\r\n\r\nexport function _getTvLatest() {\r\n    return new Promise((res, rej) => {\r\n        axios({\r\n            method: \"get\",\r\n            url: `/tv/popular?api_key=${API_KEY}`,\r\n            data: {},\r\n            headers: {\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((responseText) => {\r\n                res(responseText);\r\n            })\r\n            .catch((error) => {\r\n                console.error(`_getTvLatest : ${error}`);\r\n                rej(error);\r\n            });\r\n    });\r\n}\r\nexport function _getTvToprated() {\r\n    return new Promise((res, rej) => {\r\n        axios({\r\n            method: \"get\",\r\n            url: `/tv/top_rated?api_key=${API_KEY}`,\r\n            data: {},\r\n            headers: {\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((responseText) => {\r\n                res(responseText);\r\n            })\r\n            .catch((error) => {\r\n                console.error(`_getTvToprated : ${error}`);\r\n                rej(error);\r\n            });\r\n    });\r\n}\r\n","import { _getPopularPeople } from '../../API/peopleApi'\r\nexport const INIT_PEOPLE = 'INIT_PEOPLE'\r\nconst setPeople = (data) => {\r\n    return {\r\n        type: INIT_PEOPLE,\r\n        data\r\n    }\r\n}\r\nexport const getInitPeople = () => {\r\n    return (dispatch, getState) => {\r\n        _getPopularPeople().then(res => dispatch(setPeople(res.data.results)));\r\n\r\n\r\n    }\r\n}","\r\nimport axios from 'axios'\r\nimport { API_KEY } from '../Utils/constants'\r\n\r\nexport function _getPopularPeople() {\r\n    return new Promise((res, rej) => {\r\n        axios({\r\n            method: \"get\",\r\n            url: `/person/popular?api_key=${API_KEY}`,\r\n            data: {},\r\n            headers: {\r\n                \"Cache-Control\": \"no-cache\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((responseText) => {\r\n                res(responseText);\r\n            })\r\n            .catch((error) => {\r\n                console.error(`_getPopularPeople : ${error}`);\r\n                rej(error);\r\n            });\r\n    });\r\n}","import axios from 'axios'\r\n\r\naxios.interceptors.request.use(\r\n    async (config) => {\r\n        // Do something before request is sent\r\n\r\n        config.baseURL = 'https://api.themoviedb.org/3/'\r\n        return config;\r\n    },\r\n    function (error) {\r\n        // Do something with request error\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n","import { useEffect } from 'react';\r\nimport Navbar from './Views/Navbar'\r\nimport Home from './Views/Home'\r\n//Redux\r\n\r\nimport { getInit } from './Redux/actions/index'\r\nimport init from './API/index';\r\nfunction App(props) {\r\n  useEffect(() => {\r\n    getInit();\r\n  }, [])\r\n  return (\r\n    <div className=\"bg-prblack px-3 h-screen w-screen overflow-y-auto\">\r\n      <Navbar />\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\nexport default App\r\n","import { store } from \"../../index\";\r\nimport { getInitMovies } from './movies'\r\nimport { getInitTvs } from \"./tvs\";\r\nimport { getInitPeople } from './people'\r\n// let dispatch = store.dispatch\r\nexport const getInit = () => {\r\n\r\n    store.dispatch(getInitMovies())\r\n    store.dispatch(getInitTvs())\r\n    store.dispatch(getInitPeople())\r\n}","import { INIT_MOVIES } from \"../actions/movies\";\r\nconst initialState = {\r\n    nowPlaying: [],\r\n    popularMovies: [],\r\n    topRated: [],\r\n    upcomingMovies: []\r\n}\r\nconst movies = (state = { ...initialState }, action) => {\r\n    switch (action.type) {\r\n        case INIT_MOVIES: {\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n}\r\nexport default movies;","import { INIT_TVS } from \"../actions/tvs\";\r\nconst initialState = {\r\n    topRated: [],\r\n    tvLatest: []\r\n}\r\nconst tvs = (state = { ...initialState }, action) => {\r\n    switch (action.type) {\r\n        case INIT_TVS: {\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n}\r\nexport default tvs;","import { INIT_PEOPLE } from \"../actions/people\";\r\nconst initialState = {\r\n    popular: []\r\n}\r\nconst people = (state = { ...initialState }, action) => {\r\n    switch (action.type) {\r\n        case INIT_PEOPLE: {\r\n\r\n            return {\r\n                ...state,\r\n                popular: [...action.data]\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n}\r\nexport default people;","import { combineReducers } from \"redux\";\r\n\r\n//Reducers\r\n\r\nimport movies from './movies'\r\nimport tvs from './tvs'\r\nimport people from './people'\r\nconst rootReducer = combineReducers({\r\n    movies,\r\n    tvs,\r\n    people\r\n});\r\n\r\nexport default rootReducer;","import thunk from 'redux-thunk'\r\nimport {applyMiddleware} from 'redux'\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n   // logger,\r\n  //  persist\r\n)   ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n//Redux\r\nimport { createStore, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducer from \"./Redux/reducers\";\r\nimport middleware from \"./middleware\";\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV === \"development\" &&\r\n    typeof window === \"object\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    })\r\n    : compose;\r\nconst enhancer = composeEnhancers(\r\n  middleware\r\n  // other store enhancers if any\r\n);\r\n\r\nexport const store = createStore(reducer, enhancer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}